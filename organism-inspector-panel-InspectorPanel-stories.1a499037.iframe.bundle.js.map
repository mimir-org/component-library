{"version":3,"file":"organism-inspector-panel-InspectorPanel-stories.1a499037.iframe.bundle.js","mappings":";AAkDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;;AClDA;AACA;AAQA;;ACTA;AAQA;;;ACLA;;AAQA;;;;AAIA;AAGA;AACA;AAOA;;;;;;;;AAQA;AACA;AACA;AACA;;;;;;;AAOA;AACA","sources":["webpack://@mimirorg/component-library/./src/components/layouts/Box.styled.tsx","webpack://@mimirorg/component-library/./src/components/layouts/Flexbox.styled.tsx","webpack://@mimirorg/component-library/./src/components/layouts/Gridbox.styled.tsx","webpack://@mimirorg/component-library/./src/components/organism/inspector-panel/InspectorPanel.styled..tsx"],"sourcesContent":["import { ElementType } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Borders,\n  Display,\n  Flex,\n  Grid,\n  Palette,\n  Polymorphic,\n  Positions,\n  Shadows,\n  Sizing,\n  Spacings,\n} from \"../core/props\";\nimport {\n  bordersMixin,\n  displayMixin,\n  flexMixin,\n  focus,\n  gridMixin,\n  paletteMixin,\n  positionsMixin,\n  shadowsMixin,\n  sizingMixin,\n  spacingMixin,\n} from \"../core/theme/helpers\";\nimport { motion } from \"framer-motion\";\n\nexport type BoxProps = Display &\n  Positions &\n  Flex &\n  Grid &\n  Palette &\n  Sizing &\n  Spacings &\n  Borders &\n  Shadows &\n  Polymorphic<ElementType>;\n\n/**\n * A polymorphic layout component for a box element.\n *\n * Since many components often need a generic box for layout purposes this component exposes flexbox and grid properties\n * in addition to properties related to display, positions, palette, sizing, spacing, borders, shadows etc.\n *\n * @param as polymorphic parameter for changing base element (defaults to <div>)\n * @param props can receive all the css properties related to the aforementioned interfaces: palette, sizing etc...\n * @constructor\n */\nexport const Box = styled.div<BoxProps>`\n  ${focus};\n  ${displayMixin};\n  ${flexMixin};\n  ${gridMixin};\n  ${positionsMixin};\n  ${sizingMixin};\n  ${bordersMixin};\n  ${paletteMixin};\n  ${shadowsMixin};\n  ${spacingMixin};\n`;\n\n/**\n * An animation wrapper for the Box component\n *\n * @see https://github.com/framer/motion\n */\nexport const MotionBox = motion(Box);\n","import { ElementType } from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, Polymorphic } from \"./../core/props/\";\nimport { flexMixin, focus } from \"../core/theme/helpers\";\nimport { motion } from \"framer-motion\";\n\nexport type FlexBoxProps = Flex & Polymorphic<ElementType>;\n\n/**\n * A polymorphic layout component for flexbox behaviour.\n *\n * @param as polymorphic parameter for changing base element (defaults to <div>)\n * @param props can receive all standard css flexbox properties\n * @constructor\n */\nexport const Flexbox = styled.div<FlexBoxProps>`\n  display: flex;\n  ${focus};\n  ${flexMixin};\n`;\n\n/**\n * An animation wrapper for the Flexbox component\n *\n * @see https://github.com/framer/motion\n */\nexport const MotionFlexbox = motion(Flexbox);\n","import { ElementType } from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Polymorphic } from \"../core/props\";\nimport { gridMixin } from \"../core/theme/helpers\";\nimport { motion } from \"framer-motion\";\n\nexport type GridboxProps = Grid & Polymorphic<ElementType>;\n\n/**\n * A polymorphic layout component for grid behaviour.\n *\n * @param as polymorphic parameter for changing base element (defaults to <div>)\n * @param props can receive all standard css grid properties\n * @constructor\n */\nexport const Gridbox = styled.div<GridboxProps>`\n  display: grid;\n  ${gridMixin};\n`;\n\n/**\n * An animation wrapper for the Grid component\n *\n * @see https://github.com/framer/motion\n */\nexport const MotionGridbox = motion(Gridbox);\n","import styled from \"styled-components\";\r\nimport { spacingMixin } from \"../../../components/core/theme/helpers\";\r\nimport { Spacings } from \"../../core/props\";\r\n\r\nexport type InspectorHeaderProps = {\r\n  bgColor?: string;\r\n};\r\n\r\ninterface InspectorTabHeaderProps {\r\n  active: boolean;\r\n  color: string;\r\n}\r\n\r\n/**\r\n * Removes styles from react router links.\r\n * Useful when wrapping other elements with navigation semantics.\r\n */\r\nexport const InspectorHeader = styled.div<InspectorHeaderProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: ${(props) => (props.bgColor != null ? props.bgColor : \"inherit\")};\r\n  height: 44px;\r\n`;\r\n\r\n/**\r\n * Removes styles from react router links.\r\n * Useful when wrapping other elements with navigation semantics.\r\n */\r\nexport const InspectorHeaderContent = styled.div<Spacings>`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  ${spacingMixin};\r\n`;\r\n\r\nexport const InspectorContent = styled.div<Spacings>`\r\n  ${spacingMixin};\r\n`;\r\n\r\n/**\r\n * Removes styles from react router links.\r\n * Useful when wrapping other elements with navigation semantics.\r\n */\r\nexport const InspectorTabHeader = styled.div<InspectorTabHeaderProps>`\r\n  pointer-events: initial;\r\n  box-sizing: border-box;\r\n  min-width: 120px;\r\n  border-top-right-radius: 6px;\r\n  border-top-left-radius: 6px;\r\n  color: #000;\r\n  margin-right: 7px;\r\n  height: ${(props) => (props.active ? 44 : 35)}px;\r\n  margin-top: ${(props) => (props.active ? 0 : 9)}px;\r\n  background-color: ${(props) => (props.active ? props.theme.mimir.color.reference.neutral[99] : props.color)};\r\n  padding: ${(props) => (props.active ? \"17px 14px 0px 14px;\" : \"8px 14px 0px 14px\")};\r\n  box-shadow: -4px 0 4px -5px rgba(0, 0, 0, 0.4), 4px 0 3px -5px rgba(0, 0, 0, 0.4);\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n  p {\r\n    bottom: ${(props: { active: boolean }) => (props.active ? 20 : 16)}px;\r\n    font-weight: ${(props) => props.active && props.theme.mimir.typography.typeface.weights.bold};\r\n    text-align: center;\r\n  }\r\n`;\r\n"],"names":[],"sourceRoot":""}