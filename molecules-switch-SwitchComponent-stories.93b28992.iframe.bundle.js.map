{"version":3,"file":"molecules-switch-SwitchComponent-stories.93b28992.iframe.bundle.js","mappings":";;;;AAOA;;;AAGA;;;;;AAKA;;;;AAIA;;AAIA;;;;AAIA;;AAEA;;;;;;;AAOA;;;;ACnBA;AACA;AAQA","sources":["webpack://@mimirorg/component-library/./src/components/molecules/switch/SwitchComponent.styled.tsx","webpack://@mimirorg/component-library/./src/components/layouts/Flexbox.styled.tsx"],"sourcesContent":["import * as Switch from \"@radix-ui/react-switch\";\nimport styled from \"styled-components\";\n\nexport const SwitchRoot = styled(Switch.Root)`\n  all: unset;\n  width: 42px;\n  height: 25px;\n  background-color: ${(props) => props.theme.mimir.color.surface.variant.base};\n  border-radius: 9999px;\n  position: relative;\n  box-shadow: ${(props) => props.theme.mimir.shadow.small};\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\n  :hover {\n    cursor: pointer;\n    background-color: ${(props) => props.theme.mimir.color.secondary.container?.base};\n  }\n\n  :focus {\n    box-shadow: ${(props) => props.theme.mimir.shadow.small};\n  }\n`;\n\nexport const SwitchThumb = styled(Switch.Thumb)`\n  display: block;\n  width: 21px;\n  height: 21px;\n  background-color: ${(props) => props.theme.mimir.color.text.on};\n  border-radius: 9999px;\n  box-shadow: ${(props) => props.theme.mimir.shadow.small};\n  transition: transform 100ms;\n  transform: translateX(2px);\n  will-change: transform;\n\n  &[data-state=\"checked\"] {\n    transform: translateX(19px);\n    background-color: ${(props) => props.theme.mimir.color.primary.base};\n  }\n`;\n","import { ElementType } from \"react\";\nimport styled from \"styled-components\";\nimport { Flex, Polymorphic } from \"./../core/props/\";\nimport { flexMixin, focus } from \"../core/theme/helpers\";\nimport { motion } from \"framer-motion\";\n\nexport type FlexBoxProps = Flex & Polymorphic<ElementType>;\n\n/**\n * A polymorphic layout component for flexbox behaviour.\n *\n * @param as polymorphic parameter for changing base element (defaults to <div>)\n * @param props can receive all standard css flexbox properties\n * @constructor\n */\nexport const Flexbox = styled.div<FlexBoxProps>`\n  display: flex;\n  ${focus};\n  ${flexMixin};\n`;\n\n/**\n * An animation wrapper for the Flexbox component\n *\n * @see https://github.com/framer/motion\n */\nexport const MotionFlexbox = motion(Flexbox);\n"],"names":[],"sourceRoot":""}