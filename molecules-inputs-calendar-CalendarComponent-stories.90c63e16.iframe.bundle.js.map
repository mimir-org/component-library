{"version":3,"file":"molecules-inputs-calendar-CalendarComponent-stories.90c63e16.iframe.bundle.js","mappings":";;;AAmBA;;AAKA;;AAGA;AACA;AACA;AAGA;;;;;AAiBA;AACA;;;AAGA;AAGA;AACA;;;;;;;;AC/CA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;AAGA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;;;AAIA;;;AAGA;;;;AAIA;;;AAGA;AACA;;;;AAIA;;;AAGA;;;;AAIA;;;AAGA;AACA;;;;AAIA;;;AAGA;;;;;;ACtHA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;;;;AAKA;AACA;AACA;AACA;AAGA;;;;AAIA;AACA;AACA;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@mimirorg/component-library/./src/components/molecules/inputs/calendar/CalendarComponent.styled.tsx","webpack://@mimirorg/component-library/./src/components/molecules/inputs/calendar/components/CalendarContent.styled.tsx","webpack://@mimirorg/component-library/./src/components/molecules/inputs/input/Input.styled.ts","webpack://@mimirorg/component-library/./src/components/molecules/popover/Popover.styled.ts"],"sourcesContent":["import { HTMLAttributes } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Flex, Sizing, Spacings } from \"../../../core/props\";\nimport { flexMixin, sizingMixin, spacingMixin } from \"../../../core/theme/helpers\";\nimport { InputContainer } from \"../input/Input.styled\";\nimport { compactCalendar } from \"./variants/compactCalendar\";\n\nexport type CalendarVariant = \"standard\" | \"compact\";\n\nexport type CalendarComponentContainerProps = Flex &\n  Sizing &\n  Spacings &\n  Omit<HTMLAttributes<HTMLDivElement>, \"onChange\"> & {\n    variant?: CalendarVariant;\n  };\n\nexport const CalendarComponentContainer = styled.div<CalendarComponentContainerProps>`\n  display: flex;\n\n  ${({ variant }) => {\n    switch (variant) {\n      case \"compact\": {\n        return compactCalendar();\n      }\n    }\n  }};\n\n  ${flexMixin};\n  ${sizingMixin};\n  ${spacingMixin};\n`;\n\nCalendarComponentContainer.defaultProps = {\n  variant: \"standard\",\n};\n\ninterface CalendarComponentInputProps {\n  isDisabled?: boolean;\n}\n\n/**\n * The input for the calendar is always disabled, since the user interacts with the calendar through a button and modal.\n * To explicitly style the input when the \"whole\" calendar is disabled we use a custom isDisabled property for the input.\n */\nexport const CalendarComponentInput = styled(InputContainer)<CalendarComponentInputProps>`\n  height: 100%;\n  width: 100%;\n\n  :disabled {\n    color: ${(props) => props.theme.mimir.color.surface.variant.on};\n    background-color: ${(props) => props.theme.mimir.color.surface.variant.base};\n  }\n\n  ${({ theme, isDisabled }) =>\n    isDisabled &&\n    css`\n      color: ${theme.mimir.color.surface.variant.on} !important;\n      background-color: ${theme.mimir.color.outline.base} !important;\n    `};\n`;\n","import { HTMLAttributes } from \"react\";\nimport styled from \"styled-components\";\nimport { getTextRole } from \"../../../../core/theme/helpers\";\n\nexport const CalendarContentContainer = styled.div<HTMLAttributes<HTMLDivElement>>`\n  .react-calendar {\n    width: 350px;\n    max-width: 100%;\n    background-color: inherit;\n    border: none;\n    ${getTextRole(\"body-large\")};\n    border-radius: ${(props) => props.theme.mimir.border.radius.medium};\n  }\n  .react-calendar--doubleView {\n    width: 700px;\n  }\n  .react-calendar--doubleView .react-calendar__viewContainer {\n    display: flex;\n    margin: -0.5em;\n  }\n  .react-calendar--doubleView .react-calendar__viewContainer > * {\n    width: 50%;\n    margin: 0.5em;\n  }\n  .react-calendar,\n  .react-calendar *,\n  .react-calendar *:before,\n  .react-calendar *:after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  .react-calendar button {\n    margin: 0;\n    border: 0;\n    outline: none;\n  }\n  .react-calendar button:enabled:hover {\n    cursor: pointer;\n  }\n  .react-calendar__navigation {\n    display: flex;\n    height: 44px;\n    margin-bottom: 1em;\n  }\n  .react-calendar__navigation button {\n    min-width: 44px;\n    background: none;\n    border-radius: ${(props) => props.theme.mimir.border.radius.medium};\n  }\n  .react-calendar__navigation button:disabled {\n    background-color: ${(props) => props.theme.mimir.color.outline.base};\n  }\n  .react-calendar__navigation button:enabled:hover,\n  .react-calendar__navigation button:enabled:focus {\n    background-color: ${(props) => props.theme.mimir.color.secondary.container?.base};\n  }\n  .react-calendar__month-view__weekdays {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 0.75em;\n  }\n  .react-calendar__month-view__weekdays__weekday {\n    padding: 0.5em;\n    abbr {\n      text-decoration: none;\n    }\n  }\n  .react-calendar__month-view__weekNumbers .react-calendar__tile {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 0.75em;\n    font-weight: bold;\n  }\n  .react-calendar__month-view__days__day--weekend {\n    color: #d10000;\n  }\n  .react-calendar__month-view__days__day--neighboringMonth {\n    color: #757575;\n  }\n  .react-calendar__year-view .react-calendar__tile,\n  .react-calendar__decade-view .react-calendar__tile,\n  .react-calendar__century-view .react-calendar__tile {\n    padding: 2em 0.5em;\n  }\n  .react-calendar__tile {\n    max-width: 100%;\n    padding: ${(props) => props.theme.mimir.spacing.l};\n    background: none;\n    text-align: center;\n    line-height: 16px;\n    border-radius: ${(props) => props.theme.mimir.border.radius.medium};\n  }\n  .react-calendar__tile:disabled {\n    background-color: ${(props) => props.theme.mimir.color.outline.base};\n  }\n  .react-calendar__tile:enabled:hover,\n  .react-calendar__tile:enabled:focus {\n    background-color: ${(props) => props.theme.mimir.color.secondary.container?.base};\n  }\n  .react-calendar__tile--now {\n    background-color: ${(props) => props.theme.mimir.color.secondary.container?.base};\n    color: ${(props) => props.theme.mimir.color.text.base};\n  }\n  .react-calendar__tile--now:enabled:hover,\n  .react-calendar__tile--now:enabled:focus {\n    background-color: ${(props) => props.theme.mimir.color.secondary.container?.base};\n  }\n  .react-calendar__tile--hasActive {\n    background: ${(props) => props.theme.mimir.color.tertiary.container?.base};\n  }\n  .react-calendar__tile--hasActive:enabled:hover,\n  .react-calendar__tile--hasActive:enabled:focus {\n    background-color: ${(props) => props.theme.mimir.color.secondary.container?.base};\n  }\n  .react-calendar__tile--active {\n    background-color: ${(props) => props.theme.mimir.color.tertiary.container?.base};\n    color: ${(props) => props.theme.mimir.color.text.base};\n  }\n  .react-calendar__tile--active:enabled:hover,\n  .react-calendar__tile--active:enabled:focus {\n    background-color: ${(props) => props.theme.mimir.color.secondary.container?.base};\n  }\n  .react-calendar--selectRange .react-calendar__tile--hover {\n    background-color: ${(props) => props.theme.mimir.color.surface.variant.base};\n  }\n`;\n","import styled from \"styled-components\";\nimport { focus, getTextRole, placeholder, sizingMixin } from \"../../../core/theme/helpers\";\nimport { InputProps } from \"./Input\";\n\nexport const InputContainer = styled.input<InputProps>`\n  height: 100%;\n  width: 100%;\n\n  border: 1px solid ${(props) => props.theme.mimir.color.outline.base};\n  border-radius: ${(props) => props.theme.mimir.border.radius.medium};\n  padding: ${(props) => props.theme.mimir.spacing.base} ${(props) => props.theme.mimir.spacing.l};\n  padding-right: ${(props) => props.icon && props.iconPlacement === \"right\" && props.theme.mimir.spacing.multiple(6)};\n  padding-left: ${(props) => props.icon && props.iconPlacement === \"left\" && props.theme.mimir.spacing.multiple(6)};\n\n  background-color: ${(props) => props.theme.mimir.color.pure.base};\n  color: ${(props) => props.theme.mimir.color.background.on};\n\n  :disabled {\n    color: ${(props) => props.theme.mimir.color.surface.variant.on};\n    background-color: ${(props) => props.theme.mimir.color.outline.base};\n  }\n\n  box-sizing: border-box;\n\n  ${getTextRole(\"body-large\")};\n  ${sizingMixin};\n  ${placeholder};\n  ${focus};\n`;\n\nexport const InputIconContainer = styled.span<InputProps>`\n  position: absolute;\n  top: 50%;\n  transform: translate(0, -50%);\n  left: ${(props) => props.icon && props.iconPlacement === \"left\" && props.theme.mimir.spacing.xl};\n  right: ${(props) => props.icon && props.iconPlacement === \"right\" && props.theme.mimir.spacing.xl};\n  color: ${(props) => props.theme.mimir.color.primary.base};\n  line-height: 0;\n\n  img,\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { Palette, Sizing } from \"../../core/props\";\nimport { focus, paletteMixin, sizingMixin, translucify } from \"../../core/theme/helpers\";\n\nexport type PopoverContentProps = Sizing & Palette;\n\nexport const PopoverContent = styled.div<PopoverContentProps>`\n  padding: ${(props) => props.theme.mimir.spacing.xl};\n  border-radius: ${(props) => props.theme.mimir.border.radius.large};\n  background-color: ${(props) => translucify(props.theme.mimir.color.surface.base, 0.98)};\n  color: ${(props) => props.theme.mimir.color.surface.on};\n  box-shadow: ${(props) => props.theme.mimir.shadow.small};\n  ${paletteMixin};\n  ${sizingMixin};\n  ${focus};\n`;\n"],"names":[],"sourceRoot":""}